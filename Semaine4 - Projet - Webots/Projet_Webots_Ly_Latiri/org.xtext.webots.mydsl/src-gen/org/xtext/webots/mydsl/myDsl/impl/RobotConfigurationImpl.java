/**
 * generated by Xtext 2.22.0
 */
package org.xtext.webots.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.webots.mydsl.myDsl.Mission;
import org.xtext.webots.mydsl.myDsl.MyDslPackage;
import org.xtext.webots.mydsl.myDsl.Robot;
import org.xtext.webots.mydsl.myDsl.RobotConfiguration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Robot Configuration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.webots.mydsl.myDsl.impl.RobotConfigurationImpl#getMAX_SPEED <em>MAX SPEED</em>}</li>
 *   <li>{@link org.xtext.webots.mydsl.myDsl.impl.RobotConfigurationImpl#getTIME_STEP <em>TIME STEP</em>}</li>
 *   <li>{@link org.xtext.webots.mydsl.myDsl.impl.RobotConfigurationImpl#getRobot <em>Robot</em>}</li>
 *   <li>{@link org.xtext.webots.mydsl.myDsl.impl.RobotConfigurationImpl#getMission <em>Mission</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RobotConfigurationImpl extends MinimalEObjectImpl.Container implements RobotConfiguration
{
  /**
	 * The default value of the '{@link #getMAX_SPEED() <em>MAX SPEED</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getMAX_SPEED()
	 * @generated
	 * @ordered
	 */
  protected static final String MAX_SPEED_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getMAX_SPEED() <em>MAX SPEED</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getMAX_SPEED()
	 * @generated
	 * @ordered
	 */
  protected String maX_SPEED = MAX_SPEED_EDEFAULT;

  /**
	 * The default value of the '{@link #getTIME_STEP() <em>TIME STEP</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getTIME_STEP()
	 * @generated
	 * @ordered
	 */
  protected static final String TIME_STEP_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getTIME_STEP() <em>TIME STEP</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getTIME_STEP()
	 * @generated
	 * @ordered
	 */
  protected String timE_STEP = TIME_STEP_EDEFAULT;

  /**
	 * The cached value of the '{@link #getRobot() <em>Robot</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getRobot()
	 * @generated
	 * @ordered
	 */
  protected Robot robot;

  /**
	 * The cached value of the '{@link #getMission() <em>Mission</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getMission()
	 * @generated
	 * @ordered
	 */
  protected Mission mission;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected RobotConfigurationImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return MyDslPackage.Literals.ROBOT_CONFIGURATION;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getMAX_SPEED()
  {
		return maX_SPEED;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setMAX_SPEED(String newMAX_SPEED)
  {
		String oldMAX_SPEED = maX_SPEED;
		maX_SPEED = newMAX_SPEED;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__MAX_SPEED, oldMAX_SPEED, maX_SPEED));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getTIME_STEP()
  {
		return timE_STEP;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setTIME_STEP(String newTIME_STEP)
  {
		String oldTIME_STEP = timE_STEP;
		timE_STEP = newTIME_STEP;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__TIME_STEP, oldTIME_STEP, timE_STEP));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Robot getRobot()
  {
		return robot;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetRobot(Robot newRobot, NotificationChain msgs)
  {
		Robot oldRobot = robot;
		robot = newRobot;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__ROBOT, oldRobot, newRobot);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setRobot(Robot newRobot)
  {
		if (newRobot != robot) {
			NotificationChain msgs = null;
			if (robot != null)
				msgs = ((InternalEObject)robot).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ROBOT_CONFIGURATION__ROBOT, null, msgs);
			if (newRobot != null)
				msgs = ((InternalEObject)newRobot).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ROBOT_CONFIGURATION__ROBOT, null, msgs);
			msgs = basicSetRobot(newRobot, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__ROBOT, newRobot, newRobot));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Mission getMission()
  {
		return mission;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetMission(Mission newMission, NotificationChain msgs)
  {
		Mission oldMission = mission;
		mission = newMission;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__MISSION, oldMission, newMission);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setMission(Mission newMission)
  {
		if (newMission != mission) {
			NotificationChain msgs = null;
			if (mission != null)
				msgs = ((InternalEObject)mission).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ROBOT_CONFIGURATION__MISSION, null, msgs);
			if (newMission != null)
				msgs = ((InternalEObject)newMission).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.ROBOT_CONFIGURATION__MISSION, null, msgs);
			msgs = basicSetMission(newMission, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ROBOT_CONFIGURATION__MISSION, newMission, newMission));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case MyDslPackage.ROBOT_CONFIGURATION__ROBOT:
				return basicSetRobot(null, msgs);
			case MyDslPackage.ROBOT_CONFIGURATION__MISSION:
				return basicSetMission(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case MyDslPackage.ROBOT_CONFIGURATION__MAX_SPEED:
				return getMAX_SPEED();
			case MyDslPackage.ROBOT_CONFIGURATION__TIME_STEP:
				return getTIME_STEP();
			case MyDslPackage.ROBOT_CONFIGURATION__ROBOT:
				return getRobot();
			case MyDslPackage.ROBOT_CONFIGURATION__MISSION:
				return getMission();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case MyDslPackage.ROBOT_CONFIGURATION__MAX_SPEED:
				setMAX_SPEED((String)newValue);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__TIME_STEP:
				setTIME_STEP((String)newValue);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__ROBOT:
				setRobot((Robot)newValue);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__MISSION:
				setMission((Mission)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case MyDslPackage.ROBOT_CONFIGURATION__MAX_SPEED:
				setMAX_SPEED(MAX_SPEED_EDEFAULT);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__TIME_STEP:
				setTIME_STEP(TIME_STEP_EDEFAULT);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__ROBOT:
				setRobot((Robot)null);
				return;
			case MyDslPackage.ROBOT_CONFIGURATION__MISSION:
				setMission((Mission)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case MyDslPackage.ROBOT_CONFIGURATION__MAX_SPEED:
				return MAX_SPEED_EDEFAULT == null ? maX_SPEED != null : !MAX_SPEED_EDEFAULT.equals(maX_SPEED);
			case MyDslPackage.ROBOT_CONFIGURATION__TIME_STEP:
				return TIME_STEP_EDEFAULT == null ? timE_STEP != null : !TIME_STEP_EDEFAULT.equals(timE_STEP);
			case MyDslPackage.ROBOT_CONFIGURATION__ROBOT:
				return robot != null;
			case MyDslPackage.ROBOT_CONFIGURATION__MISSION:
				return mission != null;
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (MAX_SPEED: ");
		result.append(maX_SPEED);
		result.append(", TIME_STEP: ");
		result.append(timE_STEP);
		result.append(')');
		return result.toString();
	}

} //RobotConfigurationImpl
