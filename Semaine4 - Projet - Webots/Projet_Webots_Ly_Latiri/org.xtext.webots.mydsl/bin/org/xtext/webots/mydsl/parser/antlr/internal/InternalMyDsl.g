/*
 * generated by Xtext 2.22.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.webots.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.webots.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.webots.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RobotConfiguration";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRobotConfiguration
entryRuleRobotConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotConfigurationRule()); }
	iv_ruleRobotConfiguration=ruleRobotConfiguration
	{ $current=$iv_ruleRobotConfiguration.current; }
	EOF;

// Rule RobotConfiguration
ruleRobotConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RobotConfiguration'
		{
			newLeafNode(otherlv_0, grammarAccess.getRobotConfigurationAccess().getRobotConfigurationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotConfigurationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='MAX_SPEED'
			{
				newLeafNode(otherlv_2, grammarAccess.getRobotConfigurationAccess().getMAX_SPEEDKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getRobotConfigurationAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotConfigurationAccess().getMAX_SPEEDEDoubleParserRuleCall_2_2_0());
					}
					lv_MAX_SPEED_4_0=ruleEDouble
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotConfigurationRule());
						}
						set(
							$current,
							"MAX_SPEED",
							lv_MAX_SPEED_4_0,
							"org.xtext.webots.mydsl.MyDsl.EDouble");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='TIME_STEP'
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotConfigurationAccess().getTIME_STEPKeyword_3_0());
			}
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getRobotConfigurationAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotConfigurationAccess().getTIME_STEPEIntParserRuleCall_3_2_0());
					}
					lv_TIME_STEP_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotConfigurationRule());
						}
						set(
							$current,
							"TIME_STEP",
							lv_TIME_STEP_7_0,
							"org.xtext.webots.mydsl.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='robot'
		{
			newLeafNode(otherlv_8, grammarAccess.getRobotConfigurationAccess().getRobotKeyword_4());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getRobotConfigurationAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotConfigurationAccess().getRobotRobotParserRuleCall_6_0());
				}
				lv_robot_10_0=ruleRobot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotConfigurationRule());
					}
					set(
						$current,
						"robot",
						lv_robot_10_0,
						"org.xtext.webots.mydsl.MyDsl.Robot");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='mission'
			{
				newLeafNode(otherlv_11, grammarAccess.getRobotConfigurationAccess().getMissionKeyword_7_0());
			}
			otherlv_12=':'
			{
				newLeafNode(otherlv_12, grammarAccess.getRobotConfigurationAccess().getColonKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotConfigurationAccess().getMissionMissionParserRuleCall_7_2_0());
					}
					lv_mission_13_0=ruleMission
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotConfigurationRule());
						}
						set(
							$current,
							"mission",
							lv_mission_13_0,
							"org.xtext.webots.mydsl.MyDsl.Mission");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getRobotConfigurationAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActuatorAccess().getLeftMotorParserRuleCall_0());
		}
		this_LeftMotor_0=ruleLeftMotor
		{
			$current = $this_LeftMotor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActuatorAccess().getRightMotorParserRuleCall_1());
		}
		this_RightMotor_1=ruleRightMotor
		{
			$current = $this_RightMotor_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBehavior
entryRuleBehavior returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBehaviorRule()); }
	iv_ruleBehavior=ruleBehavior
	{ $current=$iv_ruleBehavior.current; }
	EOF;

// Rule Behavior
ruleBehavior returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBehaviorAccess().getEscapeParserRuleCall_0());
		}
		this_Escape_0=ruleEscape
		{
			$current = $this_Escape_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBehaviorAccess().getHomeParserRuleCall_1());
		}
		this_Home_1=ruleHome
		{
			$current = $this_Home_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSensorAccess().getDistanceSensorParserRuleCall_0());
		}
		this_DistanceSensor_0=ruleDistanceSensor
		{
			$current = $this_DistanceSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_1());
		}
		this_LightSensor_1=ruleLightSensor
		{
			$current = $this_LightSensor_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	iv_ruleRobot=ruleRobot
	{ $current=$iv_ruleRobot.current; }
	EOF;

// Rule Robot
ruleRobot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRobotAccess().getRobotAction_0(),
					$current);
			}
		)
		otherlv_1='Robot'
		{
			newLeafNode(otherlv_1, grammarAccess.getRobotAccess().getRobotKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRobotAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRobotRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRobotAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='actuators'
			{
				newLeafNode(otherlv_4, grammarAccess.getRobotAccess().getActuatorsKeyword_4_0());
			}
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getRobotAccess().getColonKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRobotAccess().getActuatorsActuatorParserRuleCall_4_2_0());
					}
					lv_actuators_6_0=ruleActuator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRobotRule());
						}
						add(
							$current,
							"actuators",
							lv_actuators_6_0,
							"org.xtext.webots.mydsl.MyDsl.Actuator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getRobotAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRobotAccess().getActuatorsActuatorParserRuleCall_4_3_1_0());
						}
						lv_actuators_8_0=ruleActuator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRobotRule());
							}
							add(
								$current,
								"actuators",
								lv_actuators_8_0,
								"org.xtext.webots.mydsl.MyDsl.Actuator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getRobotAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMission
entryRuleMission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionRule()); }
	iv_ruleMission=ruleMission
	{ $current=$iv_ruleMission.current; }
	EOF;

// Rule Mission
ruleMission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_finished_0_0='finished'
				{
					newLeafNode(lv_finished_0_0, grammarAccess.getMissionAccess().getFinishedFinishedKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMissionRule());
					}
					setWithLastConsumed($current, "finished", lv_finished_0_0 != null, "finished");
				}
			)
		)?
		otherlv_1='Mission'
		{
			newLeafNode(otherlv_1, grammarAccess.getMissionAccess().getMissionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMissionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMissionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='behaviors'
		{
			newLeafNode(otherlv_4, grammarAccess.getMissionAccess().getBehaviorsKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getMissionAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMissionAccess().getBehaviorsBehaviorParserRuleCall_6_0());
				}
				lv_behaviors_6_0=ruleBehavior
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMissionRule());
					}
					add(
						$current,
						"behaviors",
						lv_behaviors_6_0,
						"org.xtext.webots.mydsl.MyDsl.Behavior");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getMissionAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getBehaviorsBehaviorParserRuleCall_7_1_0());
					}
					lv_behaviors_8_0=ruleBehavior
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"behaviors",
							lv_behaviors_8_0,
							"org.xtext.webots.mydsl.MyDsl.Behavior");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleLeftMotor
entryRuleLeftMotor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeftMotorRule()); }
	iv_ruleLeftMotor=ruleLeftMotor
	{ $current=$iv_ruleLeftMotor.current; }
	EOF;

// Rule LeftMotor
ruleLeftMotor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLeftMotorAccess().getLeftMotorAction_0(),
					$current);
			}
		)
		otherlv_1='LeftMotor'
		{
			newLeafNode(otherlv_1, grammarAccess.getLeftMotorAccess().getLeftMotorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLeftMotorAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLeftMotorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRightMotor
entryRuleRightMotor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRightMotorRule()); }
	iv_ruleRightMotor=ruleRightMotor
	{ $current=$iv_ruleRightMotor.current; }
	EOF;

// Rule RightMotor
ruleRightMotor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRightMotorAccess().getRightMotorAction_0(),
					$current);
			}
		)
		otherlv_1='RightMotor'
		{
			newLeafNode(otherlv_1, grammarAccess.getRightMotorAccess().getRightMotorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRightMotorAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRightMotorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEscape
entryRuleEscape returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEscapeRule()); }
	iv_ruleEscape=ruleEscape
	{ $current=$iv_ruleEscape.current; }
	EOF;

// Rule Escape
ruleEscape returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEscapeAccess().getEscapeAction_0(),
					$current);
			}
		)
		otherlv_1='Escape'
		{
			newLeafNode(otherlv_1, grammarAccess.getEscapeAccess().getEscapeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEscapeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='sensors'
			{
				newLeafNode(otherlv_3, grammarAccess.getEscapeAccess().getSensorsKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getEscapeAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEscapeAccess().getSensorsSensorParserRuleCall_3_2_0());
					}
					lv_sensors_5_0=ruleSensor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEscapeRule());
						}
						add(
							$current,
							"sensors",
							lv_sensors_5_0,
							"org.xtext.webots.mydsl.MyDsl.Sensor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getEscapeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEscapeAccess().getSensorsSensorParserRuleCall_3_3_1_0());
						}
						lv_sensors_7_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEscapeRule());
							}
							add(
								$current,
								"sensors",
								lv_sensors_7_0,
								"org.xtext.webots.mydsl.MyDsl.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getEscapeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleHome
entryRuleHome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHomeRule()); }
	iv_ruleHome=ruleHome
	{ $current=$iv_ruleHome.current; }
	EOF;

// Rule Home
ruleHome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHomeAccess().getHomeAction_0(),
					$current);
			}
		)
		otherlv_1='Home'
		{
			newLeafNode(otherlv_1, grammarAccess.getHomeAccess().getHomeKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getHomeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='sensors'
			{
				newLeafNode(otherlv_3, grammarAccess.getHomeAccess().getSensorsKeyword_3_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getHomeAccess().getColonKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHomeAccess().getSensorsSensorParserRuleCall_3_2_0());
					}
					lv_sensors_5_0=ruleSensor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHomeRule());
						}
						add(
							$current,
							"sensors",
							lv_sensors_5_0,
							"org.xtext.webots.mydsl.MyDsl.Sensor");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getHomeAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHomeAccess().getSensorsSensorParserRuleCall_3_3_1_0());
						}
						lv_sensors_7_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHomeRule());
							}
							add(
								$current,
								"sensors",
								lv_sensors_7_0,
								"org.xtext.webots.mydsl.MyDsl.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getHomeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDistanceSensor
entryRuleDistanceSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDistanceSensorRule()); }
	iv_ruleDistanceSensor=ruleDistanceSensor
	{ $current=$iv_ruleDistanceSensor.current; }
	EOF;

// Rule DistanceSensor
ruleDistanceSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDistanceSensorAccess().getDistanceSensorAction_0(),
					$current);
			}
		)
		otherlv_1='DistanceSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getDistanceSensorAccess().getDistanceSensorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDistanceSensorAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDistanceSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLightSensor
entryRuleLightSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLightSensorRule()); }
	iv_ruleLightSensor=ruleLightSensor
	{ $current=$iv_ruleLightSensor.current; }
	EOF;

// Rule LightSensor
ruleLightSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLightSensorAccess().getLightSensorAction_0(),
					$current);
			}
		)
		otherlv_1='LightSensor'
		{
			newLeafNode(otherlv_1, grammarAccess.getLightSensorAccess().getLightSensorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLightSensorAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLightSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.webots.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
